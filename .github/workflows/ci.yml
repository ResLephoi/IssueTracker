name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened, closed]
env:
  NODE_VERSION: '20.x'
  DOTNET_VERSION: '8.0.x'
  SOLUTION_PATH: 'IssueTracker.sln'
  BUILD_CONFIGURATION: 'Release'
  
jobs:
  Backend-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Cache NuGet Packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-  
        
      - name: Restore dependencies
        working-directory: server/IssueTracker
        run: dotnet restore ${{ env.SOLUTION_PATH }}
        
      - name: Build
        working-directory: server/IssueTracker
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore
        
      - name: Unit Test
        working-directory: server/IssueTracker
        run: dotnet test ${{ env.SOLUTION_PATH }} --no-build --configuration ${{ env.BUILD_CONFIGURATION }} --verbosity normal

  client-build:
    runs-on: ubuntu-latest
    needs: Backend-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Print NPM_TOKEN value (for debugging)
        run: echo "NPM_TOKEN=${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Configure npm authentication
        working-directory: client
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        working-directory: client
        run: npm install --legacy-peer-deps

      - name: Build client
        working-directory: client
        run: npm run build
